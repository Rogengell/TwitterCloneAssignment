services:
  user-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MSSQL_SA_PASSWORD: "SuperSecret7!"
      ACCEPT_EULA: "Y"
    volumes:
      - mssql-user:/var/opt/mssql
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD-SHELL", "pgrep sqlservr"]
      interval: 10s
      retries: 1
      start_period: 60s
      timeout: 5s

  apigateway:
    build:
      context: .
      dockerfile: apigateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - FLUENTD_HOST=fluentd
      - FLUENTD_PORT=24224
    ports:
      - 8080:8080
    networks:
      - microservice-network
      - default
    depends_on:
      fluentd:
  #   migration_service:
  #    condition: service_completed_successfully

  userserviceapi:
    build:
      context: .
      dockerfile: UserServiceApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - FLUENTD_HOST=fluentd
      - FLUENTD_PORT=24224
    networks:
      - microservice-network
    depends_on:
      fluentd:
      user-db:
        condition: service_healthy

  loginserviceapi:
    build:
      context: .
      dockerfile: LoginServiceApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - FLUENTD_HOST=fluentd
      - FLUENTD_PORT=24224
    networks:
      - microservice-network
    depends_on:
      fluentd:
      user-db:
        condition: service_healthy

  migration_service:
    build:
      context: .
      dockerfile: EFramework/Migrations.Dockerfile
    networks:
      - microservice-network
      - default
    depends_on:
      user-db:
        condition: service_healthy

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    restart: always
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    volumes:
      - ./vault/config:/vault/config
      - ./vault/data:/vault/data
    command: >
      vault server -dev -dev-root-token-id="root" -dev-listen-address="0.0.0.0:8200"

  fluentd:
    image: fluent/fluentd:latest
    ports:
      - "24224:24224"  # Fluentd input port
      - "24220:24220"  # Optional: Web interface for Fluentd monitoring
    volumes:
      - fluentd-config:/fluentd/etc  # Fluentd config
      - fluentd-logs:/fluentd/log  # Fluentd logs volume
    environment:
      - FLUENTD_CONF=fluentd.conf

volumes:
  fluentd-config:
  fluentd-logs:
  mssql-user:
  vault-data:
    driver: local

networks:
  microservice-network:
    internal: true
